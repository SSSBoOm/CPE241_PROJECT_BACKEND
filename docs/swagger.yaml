basePath: /
definitions:
  domain.GenderType:
    enum:
    - MALE
    - FEMALE
    type: string
    x-enum-varnames:
    - MALE
    - FEMALE
  domain.MAINTENANCE_LOG_STATUS:
    enum:
    - CASE_OPEN
    - PENDING
    - APPROVED
    - REJECTED
    - DONE
    type: string
    x-enum-varnames:
    - MAINTENANCE_LOG_STATUS_CASE_OPEN
    - MAINTENANCE_LOG_STATUS_PENDING
    - MAINTENANCE_LOG_STATUS_APPROVED
    - MAINTENANCE_LOG_STATUS_REJECTED
    - MAINTENANCE_LOG_STATUS_DONE
  domain.PROMOTION_PRICE:
    properties:
      createdAt:
        type: string
      endDate:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      roomTypePromotionPrice:
        items:
          $ref: '#/definitions/domain.ROOM_TYPE_PROMOTION_PRICE'
        type: array
      startDate:
        type: string
      updatedAt:
        type: string
    type: object
  domain.PrefixType:
    enum:
    - MR
    - MRS
    - MS
    - ""
    type: string
    x-enum-varnames:
    - MR
    - MRS
    - MS
    - DEFAULT
  domain.RESERVATION_STATUS:
    enum:
    - WAITING_APPROVE_PAYMENT
    - REJECTED_PAYMENT
    - APPROVED_PAYMENT
    - WAITING_CHECKIN
    - CHECKED_IN
    - WAITING_CHECKED_OUT
    - SUCCESS
    - CANCELED
    type: string
    x-enum-varnames:
    - RESERVATION_STATUS_WAITING_APPROVE_PAYMENT
    - RESERVATION_STATUS_REJECTED_PAYMENT
    - RESERVATION_STATUS_APPROVED_PAYMENT
    - RESERVATION_STATUS_WAITING_CHECKIN
    - RESERVATION_STATUS_CHECKED_IN
    - RESERVATION_STATUS_WAITING_CHECKED_OUT
    - RESERVATION_STATUS_SUCCESS
    - RESERVATION_STATUS_CANCELED
  domain.RESERVATION_TYPE:
    enum:
    - ROOM
    - SERVICE
    type: string
    x-enum-varnames:
    - RESERVATION_TYPE_ROOM
    - RESERVATION_TYPE_SERVICE
  domain.ROOM:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      isActive:
        type: boolean
      roomNumber:
        type: string
      roomType:
        $ref: '#/definitions/domain.RoomType'
      updateAt:
        type: string
    type: object
  domain.ROOM_TYPE_PROMOTION_PRICE:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      isActive:
        type: boolean
      promotionPrice:
        $ref: '#/definitions/domain.PROMOTION_PRICE'
      roomType:
        $ref: '#/definitions/domain.RoomType'
      updatedAt:
        type: string
    type: object
  domain.Response:
    properties:
      data: {}
      error: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  domain.RoomType:
    properties:
      accommodate:
        type: integer
      bed:
        type: string
      createdAt:
        type: string
      detail:
        type: string
      id:
        type: integer
      imageUrl:
        type: string
      isActive:
        type: boolean
      name:
        type: string
      price:
        type: number
      room:
        items:
          $ref: '#/definitions/domain.ROOM'
        type: array
      size:
        type: string
      updateAt:
        type: string
    type: object
  payload.AddPaymentByUserIdDTO:
    properties:
      name:
        type: string
      paymentFirstName:
        type: string
      paymentLastName:
        type: string
      paymentNumber:
        type: string
      paymentTypeId:
        type: integer
    required:
    - name
    - paymentFirstName
    - paymentLastName
    - paymentNumber
    - paymentTypeId
    type: object
  payload.CreateReservationDTO:
    properties:
      endDate:
        type: string
      paymentInfoId:
        type: integer
      price:
        type: number
      roomId:
        type: integer
      serviceId:
        type: integer
      startDate:
        type: string
      type:
        $ref: '#/definitions/domain.RESERVATION_TYPE'
    required:
    - endDate
    - paymentInfoId
    - price
    - startDate
    type: object
  payload.CreateRoomType:
    properties:
      accommodate:
        type: integer
      bed:
        type: string
      detail:
        type: string
      imageUrl:
        type: string
      isActive:
        type: boolean
      name:
        type: string
      price:
        type: number
      room:
        items:
          $ref: '#/definitions/payload.RoomOnCreateRoomType'
        type: array
      size:
        type: string
    required:
    - accommodate
    - bed
    - detail
    - imageUrl
    - name
    - price
    - size
    type: object
  payload.Maintenance_Log_On_Maintenance_Create:
    properties:
      date:
        type: string
      description:
        type: string
      imageUrl:
        type: string
      status:
        $ref: '#/definitions/domain.MAINTENANCE_LOG_STATUS'
    required:
    - date
    - description
    - imageUrl
    - status
    type: object
  payload.MaintenanceCreateDTO:
    properties:
      maintenanceLog:
        items:
          $ref: '#/definitions/payload.Maintenance_Log_On_Maintenance_Create'
        type: array
      roomId:
        type: integer
      title:
        type: string
    required:
    - roomId
    - title
    type: object
  payload.MaintenanceLogCreate:
    properties:
      date:
        type: string
      description:
        type: string
      imageUrl:
        type: string
      maintenanceId:
        type: integer
      status:
        $ref: '#/definitions/domain.MAINTENANCE_LOG_STATUS'
    required:
    - date
    - description
    - maintenanceId
    - status
    type: object
  payload.PaymentTypeCreateDTO:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  payload.PaymentTypeUpdateDTO:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  payload.PromotionPriceCreateDTO:
    properties:
      endDate:
        type: string
      name:
        type: string
      price:
        type: number
      roomTypeId:
        items:
          type: integer
        type: array
      startDate:
        type: string
    required:
    - endDate
    - name
    - price
    - roomTypeId
    - startDate
    type: object
  payload.ReservationTaskCreateDTO:
    properties:
      date:
        type: string
      reservationId:
        type: integer
    required:
    - date
    - reservationId
    type: object
  payload.ReservationTaskUpdateStaffDTO:
    properties:
      id:
        type: integer
      staff:
        type: string
    required:
    - id
    - staff
    type: object
  payload.ReservationTaskUpdateStatusDTO:
    properties:
      id:
        type: integer
      status:
        type: boolean
    required:
    - id
    type: object
  payload.RoomCreateDTO:
    properties:
      isActive:
        type: boolean
      roomNumber:
        type: string
      roomTypeId:
        type: integer
    required:
    - roomNumber
    - roomTypeId
    type: object
  payload.RoomOnCreateRoomType:
    properties:
      isActive:
        type: boolean
      roomNumber:
        type: string
    required:
    - roomNumber
    type: object
  payload.RoomUpdateRoomIsActiveDTO:
    properties:
      id:
        type: integer
      isActive:
        type: boolean
    required:
    - id
    type: object
  payload.ServiceCreateDTO:
    properties:
      description:
        type: string
      imageUrl:
        type: string
      information:
        type: string
      isActive:
        type: boolean
      name:
        type: string
      price:
        type: number
      serviceTypeId:
        type: integer
    required:
    - description
    - imageUrl
    - information
    - name
    - price
    - serviceTypeId
    type: object
  payload.ServiceOnCreateServiceType:
    properties:
      description:
        type: string
      imageUrl:
        type: string
      information:
        type: string
      isActive:
        type: boolean
      name:
        type: string
      price:
        type: number
    required:
    - description
    - imageUrl
    - information
    - name
    - price
    type: object
  payload.ServiceTypeCreateDTO:
    properties:
      detail:
        type: string
      isActive:
        type: boolean
      name:
        type: string
      service:
        items:
          $ref: '#/definitions/payload.ServiceOnCreateServiceType'
        type: array
    required:
    - detail
    - name
    type: object
  payload.ServiceTypeUpdateDTO:
    properties:
      detail:
        type: string
      id:
        type: integer
      isActive:
        type: boolean
      name:
        type: string
    required:
    - detail
    - id
    - name
    type: object
  payload.ServiceTypeUpdateIsActiveDTO:
    properties:
      id:
        type: integer
      isActive:
        type: boolean
    required:
    - id
    type: object
  payload.ServiceUpdateDTO:
    properties:
      description:
        type: string
      id:
        type: integer
      imageUrl:
        type: string
      information:
        type: string
      isActive:
        type: boolean
      name:
        type: string
      price:
        type: number
      serviceTypeId:
        type: integer
    required:
    - description
    - id
    - imageUrl
    - information
    - name
    - price
    - serviceTypeId
    type: object
  payload.ServiceUpdateIsActiveDTO:
    properties:
      id:
        type: integer
      isActive:
        type: boolean
    required:
    - id
    type: object
  payload.UpdateReservationPaymentDTO:
    properties:
      paymentInfoId:
        type: integer
      reservationId:
        type: integer
    required:
    - paymentInfoId
    - reservationId
    type: object
  payload.UpdateReservationStaffDTO:
    properties:
      reservationId:
        type: integer
      staffId:
        type: string
    required:
    - reservationId
    - staffId
    type: object
  payload.UpdateReservationStatusDTO:
    properties:
      reservationId:
        type: integer
      status:
        $ref: '#/definitions/domain.RESERVATION_STATUS'
    required:
    - reservationId
    - status
    type: object
  payload.UpdateRoomType:
    properties:
      accommodate:
        type: integer
      bed:
        type: string
      detail:
        type: string
      id:
        type: integer
      imageUrl:
        type: string
      isActive:
        type: boolean
      name:
        type: string
      price:
        type: number
      size:
        type: string
    required:
    - accommodate
    - bed
    - detail
    - id
    - imageUrl
    - name
    - price
    - size
    type: object
  payload.UpdateRoomTypeIsActiveDTO:
    properties:
      id:
        type: integer
      isActive:
        type: boolean
    required:
    - id
    type: object
  payload.UpdateUserDTO:
    properties:
      address:
        type: string
      dob:
        type: string
      firstName:
        type: string
      gender:
        $ref: '#/definitions/domain.GenderType'
      id:
        type: string
      lastName:
        type: string
      phone:
        minLength: 10
        type: string
      prefix:
        $ref: '#/definitions/domain.PrefixType'
    required:
    - address
    - dob
    - firstName
    - gender
    - id
    - lastName
    - prefix
    type: object
  payload.UpdateUserInformationDTO:
    properties:
      address:
        type: string
      dob:
        type: string
      firstName:
        type: string
      gender:
        $ref: '#/definitions/domain.GenderType'
      lastName:
        type: string
      phone:
        minLength: 10
        type: string
      prefix:
        $ref: '#/definitions/domain.PrefixType'
    required:
    - address
    - dob
    - firstName
    - gender
    - lastName
    - prefix
    type: object
  payload.UpdateUserRoleDTO:
    properties:
      roleId:
        type: integer
      userId:
        type: string
    required:
    - roleId
    - userId
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server celler server.
  title: CPE241 Project Backend API
  version: "1.0"
paths:
  /api/admin/manage/role:
    put:
      consumes:
      - application/json
      description: Update role by user id
      parameters:
      - description: Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/payload.UpdateUserRoleDTO'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Update role by user id
      tags:
      - manage
  /api/admin/manage/staff:
    get:
      consumes:
      - application/json
      description: Get all staff
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get all staff
      tags:
      - manage
  /api/admin/manage/user:
    get:
      consumes:
      - application/json
      description: Get all user
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get all user
      tags:
      - manage
    put:
      consumes:
      - application/json
      description: Update user by id
      parameters:
      - description: Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/payload.UpdateUserDTO'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Update user by id
      tags:
      - manage
  /api/admin/manage/user/{id}:
    get:
      consumes:
      - application/json
      description: Get user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get user by id
      tags:
      - manage
  /api/auth/google:
    get:
      description: Get Url To Google Login
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Get Url To Google Login
      tags:
      - Auth
  /api/auth/google/callback:
    post:
      description: Sign In
      parameters:
      - description: Code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Sign In
      tags:
      - Auth
  /api/auth/logout:
    get:
      description: Health checking for the service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Logout
      tags:
      - Auth
  /api/healthcheck:
    get:
      description: Health checking for the service
      operationId: HealthCheckHandler
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Health Check
  /api/maintenance:
    get:
      consumes:
      - application/json
      description: GetAll Maintenance
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: GetAll Maintenance
      tags:
      - Maintenance
    post:
      consumes:
      - application/json
      description: Create Maintenance
      parameters:
      - description: Session ID
        in: header
        name: ssid
        required: true
        type: string
      - description: MAINTENANCE_CREATE
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/payload.MaintenanceCreateDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Response'
      security:
      - ApiKeyAuth: []
      summary: Create Maintenance
      tags:
      - Maintenance
  /api/maintenance/{id}:
    get:
      consumes:
      - application/json
      description: GetByID Maintenance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      security:
      - ApiKeyAuth: []
      summary: GetByID Maintenance
      tags:
      - Maintenance
  /api/maintenance_log:
    post:
      consumes:
      - application/json
      description: Create maintenance log
      parameters:
      - description: Session ID
        in: header
        name: ssid
        required: true
        type: string
      - description: MaintenanceLogCreate
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/payload.MaintenanceLogCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Response'
      security:
      - ApiKeyAuth: []
      summary: Create maintenance log
      tags:
      - maintenance_log
  /api/payment:
    post:
      consumes:
      - application/json
      description: Add payment by user
      parameters:
      - description: Session ID
        in: header
        name: ssid
        required: true
        type: string
      - description: Add payment by user
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/payload.AddPaymentByUserIdDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Response'
      security:
      - ApiKeyAuth: []
      summary: Add payment by user
      tags:
      - payment
  /api/payment_type:
    get:
      consumes:
      - application/json
      description: GetAll Payment Type
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: GetAll Payment Type
      tags:
      - PaymentType
    post:
      consumes:
      - application/json
      description: Create Payment Type
      parameters:
      - description: Payment Type Name
        in: body
        name: name
        required: true
        schema:
          $ref: '#/definitions/payload.PaymentTypeCreateDTO'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Create Payment Type
      tags:
      - PaymentType
    put:
      consumes:
      - application/json
      description: Update Payment Type
      parameters:
      - description: Payment Type ID
        in: path
        name: id
        required: true
        type: integer
      - description: Payment Type Name
        in: body
        name: name
        required: true
        schema:
          $ref: '#/definitions/payload.PaymentTypeUpdateDTO'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Update Payment Type
      tags:
      - PaymentType
  /api/payment_type/{id}:
    get:
      consumes:
      - application/json
      description: GetByID Payment Type
      parameters:
      - description: Payment Type ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: GetByID Payment Type
      tags:
      - PaymentType
  /api/promotion_price:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Get all promotion prices
      tags:
      - promotion_price
    post:
      consumes:
      - application/json
      parameters:
      - description: Promotion Price
        in: body
        name: promotion_price
        required: true
        schema:
          $ref: '#/definitions/payload.PromotionPriceCreateDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Create promotion price
      tags:
      - promotion_price
  /api/promotion_price/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Promotion Price ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Get promotion price by ID
      tags:
      - promotion_price
  /api/reservation:
    get:
      consumes:
      - application/json
      description: Get all reservation
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Get all reservation
      tags:
      - reservation
    post:
      consumes:
      - application/json
      description: Create reservation
      parameters:
      - description: Create reservation
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/payload.CreateReservationDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Create reservation
      tags:
      - reservation
  /api/reservation/{id}:
    get:
      consumes:
      - application/json
      description: Get reservation by id
      parameters:
      - description: Reservation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Get reservation by id
      tags:
      - reservation
  /api/reservation/me:
    get:
      consumes:
      - application/json
      description: Get reservation by user id
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Get reservation by user id
      tags:
      - reservation
  /api/reservation/payment:
    patch:
      consumes:
      - application/json
      description: Update payment
      parameters:
      - description: Update payment
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/payload.UpdateReservationPaymentDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Update payment
      tags:
      - reservation
  /api/reservation/staff:
    patch:
      consumes:
      - application/json
      description: Update staff
      parameters:
      - description: Update staff
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/payload.UpdateReservationStaffDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Update staff
      tags:
      - reservation
  /api/reservation/status:
    patch:
      consumes:
      - application/json
      description: Update status
      parameters:
      - description: Update status
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/payload.UpdateReservationStatusDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Update status
      tags:
      - reservation
  /api/reservation/type/{type}:
    get:
      consumes:
      - application/json
      description: Get reservation by reservation type
      parameters:
      - description: Reservation Type
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Get reservation by reservation type
      tags:
      - reservation
  /api/reservation_task:
    get:
      consumes:
      - application/json
      description: Get all reservation task
      parameters:
      - description: Session ID
        in: header
        name: ssid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      security:
      - ApiKeyAuth: []
      summary: Get all reservation task
      tags:
      - reservation_task
    post:
      consumes:
      - application/json
      description: Create reservation task
      parameters:
      - description: Session ID
        in: header
        name: ssid
        required: true
        type: string
      - description: Create reservation task
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/payload.ReservationTaskCreateDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Response'
      security:
      - ApiKeyAuth: []
      summary: Create reservation task
      tags:
      - reservation_task
  /api/reservation_task/{reservation_id}:
    get:
      consumes:
      - application/json
      description: Get reservation task by reservation id
      parameters:
      - description: Session ID
        in: header
        name: ssid
        required: true
        type: string
      - description: Reservation ID
        in: path
        name: reservation_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      security:
      - ApiKeyAuth: []
      summary: Get reservation task by reservation id
      tags:
      - reservation_task
  /api/reservation_task/staff:
    patch:
      consumes:
      - application/json
      description: Update reservation task staff
      parameters:
      - description: Session ID
        in: header
        name: ssid
        required: true
        type: string
      - description: Update reservation task staff
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/payload.ReservationTaskUpdateStaffDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      security:
      - ApiKeyAuth: []
      summary: Update reservation task staff
      tags:
      - reservation_task
  /api/reservation_task/status:
    patch:
      consumes:
      - application/json
      description: Update reservation task status
      parameters:
      - description: Session ID
        in: header
        name: ssid
        required: true
        type: string
      - description: Update reservation task status
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/payload.ReservationTaskUpdateStatusDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      security:
      - ApiKeyAuth: []
      summary: Update reservation task status
      tags:
      - reservation_task
  /api/role:
    get:
      consumes:
      - application/json
      description: Get all roles
      produces:
      - application/json
      responses: {}
      summary: Get all roles
      tags:
      - role
  /api/room:
    get:
      consumes:
      - application/json
      description: Get all rooms
      produces:
      - application/json
      responses: {}
      summary: Get all rooms
      tags:
      - room
    post:
      consumes:
      - application/json
      description: Create room
      parameters:
      - description: Room
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/payload.RoomCreateDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
      summary: Create room
      tags:
      - room
  /api/room/{id}:
    get:
      consumes:
      - application/json
      description: Get room by id
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Get room by id
      tags:
      - room
    put:
      consumes:
      - application/json
      description: Update room
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      - description: Room
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/domain.ROOM'
      produces:
      - application/json
      responses: {}
      summary: Update room
      tags:
      - room
  /api/room/active:
    post:
      consumes:
      - application/json
      description: Update room is active
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      - description: Is Active
        in: body
        name: isActive
        required: true
        schema:
          $ref: '#/definitions/payload.RoomUpdateRoomIsActiveDTO'
      produces:
      - application/json
      responses: {}
      summary: Update room is active
      tags:
      - room
  /api/room_type:
    get:
      consumes:
      - application/json
      description: Get all room types
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Get all room types
      tags:
      - room_type
    post:
      consumes:
      - application/json
      description: Create room type
      parameters:
      - description: Room Type
        in: body
        name: roomType
        required: true
        schema:
          $ref: '#/definitions/payload.CreateRoomType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Create room type
      tags:
      - room_type
    put:
      consumes:
      - application/json
      description: Update room type
      parameters:
      - description: Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/payload.UpdateRoomType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Update room type
      tags:
      - room_type
  /api/room_type/{id}:
    get:
      consumes:
      - application/json
      description: Get room type by id
      parameters:
      - description: Room Type ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Get room type by id
      tags:
      - room_type
  /api/room_type/active:
    post:
      consumes:
      - application/json
      description: Update room type is active
      parameters:
      - description: Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/payload.UpdateRoomTypeIsActiveDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Update room type is active
      tags:
      - room_type
  /api/room_type_promotion_price/room_type/{room_type_id}:
    get:
      consumes:
      - application/json
      description: Get room type promotion price by room type id
      parameters:
      - description: Room Type ID
        in: path
        name: room_type_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.ROOM_TYPE_PROMOTION_PRICE'
            type: array
      summary: Get room type promotion price by room type id
      tags:
      - room_type_promotion_price
  /api/service:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Get all services
      tags:
      - service
    post:
      consumes:
      - application/json
      parameters:
      - description: Service
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/payload.ServiceCreateDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Create service
      tags:
      - service
    put:
      consumes:
      - application/json
      parameters:
      - description: Service
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/payload.ServiceUpdateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Update service
      tags:
      - service
  /api/service/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Service ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Get service by ID
      tags:
      - service
  /api/service/active:
    put:
      consumes:
      - application/json
      parameters:
      - description: Service
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/payload.ServiceUpdateIsActiveDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Update service is active
      tags:
      - service
  /api/service_type:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Get all service types
      tags:
      - service_type
    post:
      consumes:
      - application/json
      parameters:
      - description: Service Type
        in: body
        name: serviceType
        required: true
        schema:
          $ref: '#/definitions/payload.ServiceTypeCreateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Create service type
      tags:
      - service_type
    put:
      consumes:
      - application/json
      parameters:
      - description: Service Type ID
        in: path
        name: id
        required: true
        type: integer
      - description: Service Type
        in: body
        name: serviceType
        required: true
        schema:
          $ref: '#/definitions/payload.ServiceTypeUpdateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Update service type
      tags:
      - service_type
  /api/service_type/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Service Type ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Get service type by ID
      tags:
      - service_type
  /api/service_type/active:
    post:
      consumes:
      - application/json
      parameters:
      - description: Service Type
        in: body
        name: isActive
        required: true
        schema:
          $ref: '#/definitions/payload.ServiceTypeUpdateIsActiveDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Update service type is active
      tags:
      - service_type
  /api/user/:
    patch:
      consumes:
      - application/json
      description: Update user information
      parameters:
      - description: Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/payload.UpdateUserInformationDTO'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Update user information
      tags:
      - user
  /api/user/me:
    get:
      consumes:
      - application/json
      description: Get user information
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get user information
      tags:
      - user
  /api/user/payment:
    get:
      consumes:
      - application/json
      description: Get payment by user id
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get payment by user id
      tags:
      - user
schemes:
- https
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
