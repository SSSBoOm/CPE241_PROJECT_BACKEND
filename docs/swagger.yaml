basePath: /
definitions:
  domain.GenderType:
    enum:
    - MALE
    - FEMALE
    type: string
    x-enum-varnames:
    - MALE
    - FEMALE
  domain.MAINTENANCE_LOG_STATUS:
    enum:
    - CASE_OPEN
    - PENDING
    - APPROVED
    - REJECTED
    type: string
    x-enum-varnames:
    - MAINTENANCE_LOG_STATUS_CASE_OPEN
    - MAINTENANCE_LOG_STATUS_PENDING
    - MAINTENANCE_LOG_STATUS_APPROVED
    - MAINTENANCE_LOG_STATUS_REJECTED
  domain.PrefixType:
    enum:
    - MR
    - MRS
    - MS
    - ""
    type: string
    x-enum-varnames:
    - MR
    - MRS
    - MS
    - DEFAULT
  domain.Response:
    properties:
      data: {}
      error: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  domain.Room:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      room_number:
        type: string
      room_type:
        $ref: '#/definitions/domain.RoomType'
      updateAt:
        type: string
    type: object
  domain.RoomType:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      isActive:
        type: boolean
      name:
        type: string
      updateAt:
        type: string
    type: object
  payload.AddPaymentByUserIdDTO:
    properties:
      id:
        type: integer
      name:
        type: string
      paymentName:
        type: string
      paymentNumber:
        type: string
    required:
    - id
    - name
    - paymentName
    - paymentNumber
    type: object
  payload.CreateReservationDTO:
    properties:
      endDate:
        type: string
      paymentInfoId:
        type: integer
      price:
        type: number
      roomId:
        type: integer
      startDate:
        type: string
    required:
    - endDate
    - paymentInfoId
    - price
    - roomId
    - startDate
    type: object
  payload.GetRoomAvailableGroupByRoomTypeDTO:
    properties:
      endDate:
        type: string
      startDate:
        type: string
    required:
    - endDate
    - startDate
    type: object
  payload.Maintenance_Log_On_Maintenance_Create:
    properties:
      description:
        type: string
      status:
        $ref: '#/definitions/domain.MAINTENANCE_LOG_STATUS'
    required:
    - description
    - status
    type: object
  payload.MaintenanceCreateDTO:
    properties:
      maintenanceLog:
        items:
          $ref: '#/definitions/payload.Maintenance_Log_On_Maintenance_Create'
        type: array
      roomId:
        type: integer
    required:
    - roomId
    type: object
  payload.MaintenanceLogCreate:
    properties:
      description:
        type: string
      maintenanceId:
        type: integer
      status:
        $ref: '#/definitions/domain.MAINTENANCE_LOG_STATUS'
    required:
    - description
    - maintenanceId
    - status
    type: object
  payload.UpdateRoomType:
    properties:
      id:
        type: integer
      isActive:
        type: boolean
      name:
        type: string
    required:
    - id
    - isActive
    - name
    type: object
  payload.UpdateUserDTO:
    properties:
      address:
        type: string
      dob:
        type: string
      firstName:
        type: string
      gender:
        $ref: '#/definitions/domain.GenderType'
      id:
        type: string
      lastName:
        type: string
      phone:
        minLength: 10
        type: string
      prefix:
        $ref: '#/definitions/domain.PrefixType'
    required:
    - address
    - dob
    - firstName
    - gender
    - id
    - lastName
    - prefix
    type: object
  payload.UpdateUserInformationDTO:
    properties:
      address:
        type: string
      dob:
        type: string
      firstName:
        type: string
      gender:
        $ref: '#/definitions/domain.GenderType'
      lastName:
        type: string
      phone:
        minLength: 10
        type: string
      prefix:
        $ref: '#/definitions/domain.PrefixType'
    required:
    - address
    - dob
    - firstName
    - gender
    - lastName
    - prefix
    type: object
  payload.UpdateUserRoleDTO:
    properties:
      roleId:
        type: integer
      userId:
        type: string
    required:
    - roleId
    - userId
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server celler server.
  title: CPE241 Project Backend API
  version: "1.0"
paths:
  /api/admin/manage/role:
    put:
      consumes:
      - application/json
      description: Update role by user id
      parameters:
      - description: Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/payload.UpdateUserRoleDTO'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Update role by user id
      tags:
      - manage
  /api/admin/manage/user:
    put:
      consumes:
      - application/json
      description: Update user by id
      parameters:
      - description: Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/payload.UpdateUserDTO'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Update user by id
      tags:
      - manage
  /api/admin/manage/user/{id}:
    get:
      consumes:
      - application/json
      description: Get user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get user by id
      tags:
      - manage
  /api/auth/google:
    get:
      description: Get Url To Google Login
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Get Url To Google Login
      tags:
      - Auth
  /api/auth/google/callback:
    post:
      description: Sign In
      parameters:
      - description: Code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Sign In
      tags:
      - Auth
  /api/auth/logout:
    get:
      description: Health checking for the service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Logout
      tags:
      - Auth
  /api/healthcheck:
    get:
      description: Health checking for the service
      operationId: HealthCheckHandler
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Health Check
  /api/maintenance:
    post:
      consumes:
      - application/json
      description: Create Maintenance
      parameters:
      - description: Session ID
        in: header
        name: ssid
        required: true
        type: string
      - description: MAINTENANCE_CREATE
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/payload.MaintenanceCreateDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Response'
      security:
      - ApiKeyAuth: []
      summary: Create Maintenance
      tags:
      - Maintenance
  /api/maintenance/{id}:
    get:
      consumes:
      - application/json
      description: GetByID Maintenance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      security:
      - ApiKeyAuth: []
      summary: GetByID Maintenance
      tags:
      - Maintenance
  /api/maintenance/all:
    get:
      consumes:
      - application/json
      description: GetAll Maintenance
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: GetAll Maintenance
      tags:
      - Maintenance
  /api/maintenance_log:
    post:
      consumes:
      - application/json
      description: Create maintenance log
      parameters:
      - description: Session ID
        in: header
        name: ssid
        required: true
        type: string
      - description: MaintenanceLogCreate
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/payload.MaintenanceLogCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Response'
      security:
      - ApiKeyAuth: []
      summary: Create maintenance log
      tags:
      - maintenance_log
  /api/payment:
    post:
      consumes:
      - application/json
      description: Add payment by user
      parameters:
      - description: Session ID
        in: header
        name: ssid
        required: true
        type: string
      - description: Add payment by user
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/payload.AddPaymentByUserIdDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      security:
      - ApiKeyAuth: []
      summary: Add payment by user
      tags:
      - payment
  /api/payment_type/all:
    get:
      consumes:
      - application/json
      description: GetAll Payment Type
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: GetAll Payment Type
      tags:
      - PaymentType
  /api/reservation:
    post:
      consumes:
      - application/json
      description: Create reservation
      parameters:
      - description: Create reservation
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/payload.CreateReservationDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Create reservation
      tags:
      - reservation
  /api/reservation/get-room-available:
    post:
      consumes:
      - application/json
      description: Get room available group by room type
      parameters:
      - description: Get room available group by room type
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/payload.GetRoomAvailableGroupByRoomTypeDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Get room available group by room type
      tags:
      - reservation
  /api/role/all:
    get:
      consumes:
      - application/json
      description: Get all roles
      produces:
      - application/json
      responses: {}
      summary: Get all roles
      tags:
      - role
  /api/room:
    post:
      consumes:
      - application/json
      description: Create room
      parameters:
      - description: Room
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/domain.Room'
      produces:
      - application/json
      responses: {}
      summary: Create room
      tags:
      - room
  /api/room/{id}:
    get:
      consumes:
      - application/json
      description: Get room by id
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Get room by id
      tags:
      - room
    put:
      consumes:
      - application/json
      description: Update room
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      - description: Room
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/domain.Room'
      produces:
      - application/json
      responses: {}
      summary: Update room
      tags:
      - room
  /api/room/all:
    get:
      consumes:
      - application/json
      description: Get all rooms
      produces:
      - application/json
      responses: {}
      summary: Get all rooms
      tags:
      - room
  /api/room_type/:
    post:
      consumes:
      - application/json
      description: Create room type
      parameters:
      - description: Room Type
        in: body
        name: roomType
        required: true
        schema:
          $ref: '#/definitions/domain.RoomType'
      produces:
      - application/json
      responses: {}
      summary: Create room type
      tags:
      - room_type
    put:
      consumes:
      - application/json
      description: Update room type
      parameters:
      - description: Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/payload.UpdateRoomType'
      produces:
      - application/json
      responses: {}
      summary: Update room type
      tags:
      - room_type
  /api/room_type/{id}:
    get:
      consumes:
      - application/json
      description: Get room type by id
      parameters:
      - description: Room Type ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Get room type by id
      tags:
      - room_type
  /api/room_type/all:
    get:
      consumes:
      - application/json
      description: Get all room types
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response'
      summary: Get all room types
      tags:
      - room_type
  /api/user/:
    patch:
      consumes:
      - application/json
      description: Update user information
      parameters:
      - description: Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/payload.UpdateUserInformationDTO'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Update user information
      tags:
      - user
  /api/user/me:
    get:
      consumes:
      - application/json
      description: Get user information
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get user information
      tags:
      - user
  /api/user/payment:
    get:
      consumes:
      - application/json
      description: Get payment by user id
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get payment by user id
      tags:
      - user
schemes:
- https
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
